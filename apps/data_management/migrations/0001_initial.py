# Generated by Django 4.2.7 on 2025-09-10 14:46

from django.conf import settings
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ImportExportJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_type', models.CharField(choices=[('import', 'Import'), ('export', 'Export'), ('sync', 'Synchronization'), ('backup', 'Backup'), ('restore', 'Restore')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('format', models.CharField(choices=[('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('xml', 'XML'), ('sql', 'SQL')], default='csv', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('model_name', models.CharField(max_length=100)),
                ('source_file', models.FileField(blank=True, null=True, upload_to='data_management/imports/')),
                ('result_file', models.FileField(blank=True, null=True, upload_to='data_management/exports/')),
                ('config', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('field_mapping', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('filters', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('total_records', models.IntegerField(default=0)),
                ('processed_records', models.IntegerField(default=0)),
                ('success_records', models.IntegerField(default=0)),
                ('error_records', models.IntegerField(default=0)),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('current_step', models.CharField(blank=True, max_length=200)),
                ('errors', models.JSONField(default=list, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('warnings', models.JSONField(default=list, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('scheduled_for', models.DateTimeField(blank=True, null=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_rule', models.CharField(blank=True, max_length=200)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Import/Export Job',
                'verbose_name_plural': 'Import/Export Jobs',
                'db_table': 'data_import_export_jobs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'job_type'], name='data_import_status_2765cb_idx'), models.Index(fields=['created_by', 'created_at'], name='data_import_created_37deb0_idx'), models.Index(fields=['scheduled_for'], name='data_import_schedul_8a7539_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExternalSystemIntegration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('system_type', models.CharField(choices=[('api', 'REST API'), ('database', 'Database'), ('file_system', 'File System'), ('ftp', 'FTP/SFTP'), ('cloud_storage', 'Cloud Storage'), ('erp', 'ERP System'), ('lms', 'Learning Management System'), ('other', 'Other')], max_length=20)),
                ('endpoint_url', models.URLField(blank=True)),
                ('host', models.CharField(blank=True, max_length=200)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('database_name', models.CharField(blank=True, max_length=100)),
                ('auth_type', models.CharField(choices=[('none', 'No Authentication'), ('basic', 'Basic Authentication'), ('token', 'Token Authentication'), ('oauth2', 'OAuth 2.0'), ('api_key', 'API Key'), ('certificate', 'Certificate')], default='none', max_length=20)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('api_key', models.CharField(blank=True, max_length=500)),
                ('auth_token', models.TextField(blank=True)),
                ('connection_config', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('timeout_seconds', models.IntegerField(default=30)),
                ('retry_attempts', models.IntegerField(default=3)),
                ('is_active', models.BooleanField(default=True)),
                ('last_connection_test', models.DateTimeField(blank=True, null=True)),
                ('last_connection_status', models.BooleanField(default=False)),
                ('last_error_message', models.TextField(blank=True)),
                ('rate_limit_per_minute', models.IntegerField(default=60)),
                ('rate_limit_per_hour', models.IntegerField(default=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'External System Integration',
                'verbose_name_plural': 'External System Integrations',
                'db_table': 'external_system_integrations',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['system_type', 'is_active'], name='external_sy_system__ad985c_idx'), models.Index(fields=['last_connection_test'], name='external_sy_last_co_9405d5_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataSyncTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('sync_type', models.CharField(choices=[('one_way', 'One Way'), ('two_way', 'Two Way'), ('backup', 'Backup'), ('mirror', 'Mirror')], default='one_way', max_length=20)),
                ('source_model', models.CharField(max_length=100)),
                ('target_model', models.CharField(blank=True, max_length=100)),
                ('external_system_name', models.CharField(blank=True, max_length=100)),
                ('external_endpoint', models.URLField(blank=True)),
                ('auth_config', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('schedule_enabled', models.BooleanField(default=False)),
                ('schedule_cron', models.CharField(blank=True, max_length=100)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('field_mapping', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('filters', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('transform_rules', models.JSONField(default=list, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('disabled', 'Disabled'), ('error', 'Error')], default='active', max_length=20)),
                ('last_sync_status', models.CharField(blank=True, max_length=20)),
                ('last_sync_message', models.TextField(blank=True)),
                ('total_synced_records', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Data Sync Task',
                'verbose_name_plural': 'Data Sync Tasks',
                'db_table': 'data_sync_tasks',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'schedule_enabled'], name='data_sync_t_status_083d38_idx'), models.Index(fields=['next_run'], name='data_sync_t_next_ru_f35806_idx'), models.Index(fields=['source_model'], name='data_sync_t_source__536652_idx')],
            },
        ),
        migrations.CreateModel(
            name='BackupSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('backup_type', models.CharField(choices=[('full', 'Full Backup'), ('incremental', 'Incremental'), ('differential', 'Differential'), ('schema_only', 'Schema Only'), ('data_only', 'Data Only')], default='full', max_length=20)),
                ('frequency', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('custom', 'Custom')], default='daily', max_length=20)),
                ('custom_cron', models.CharField(blank=True, max_length=100)),
                ('include_tables', models.JSONField(default=list, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('exclude_tables', models.JSONField(default=list, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('include_media', models.BooleanField(default=True)),
                ('include_static', models.BooleanField(default=False)),
                ('storage_path', models.CharField(max_length=500)),
                ('max_backups_to_keep', models.IntegerField(default=10)),
                ('compress_backup', models.BooleanField(default=True)),
                ('encrypt_backup', models.BooleanField(default=False)),
                ('is_enabled', models.BooleanField(default=True)),
                ('last_backup', models.DateTimeField(blank=True, null=True)),
                ('next_backup', models.DateTimeField(blank=True, null=True)),
                ('last_backup_status', models.CharField(blank=True, max_length=20)),
                ('last_backup_size', models.BigIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Backup Schedule',
                'verbose_name_plural': 'Backup Schedules',
                'db_table': 'backup_schedules',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['is_enabled', 'next_backup'], name='backup_sche_is_enab_17f73b_idx'), models.Index(fields=['backup_type', 'frequency'], name='backup_sche_backup__818715_idx')],
            },
        ),
    ]
